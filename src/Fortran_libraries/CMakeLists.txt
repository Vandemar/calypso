# Define source files in MHD_src and its subdirectories
FILE(GLOB IO_SRC_FILES MHD_src/IO/*.[fF]90)
FILE(GLOB FIELD_DATA_SRC_FILES MHD_src/field_data/*.[fF]90)
FILE(GLOB SPH_MHD_SRC_FILES MHD_src/sph_MHD/*.[fF]90)
SET(CALYPSO_MHD_SRC_FILES ${IO_SRC_FILES} ${FIELD_DATA_SRC_FILES} ${SPH_MHD_SRC_FILES})

# Define source files in PARALLEL_src and its subdirectories
FILE(GLOB COMM_SRC_FILES PARALLEL_src/COMM_src/*.[fF]90)
FILE(GLOB SPH_SHELL_SRC_FILES SPH_SHELL_src/*[^c][^u][^d][^a].[fF]90)
FILE(GLOB SPH_SHELL_CUDA_COMPATIBLE_SRC_FILES SPH_SHELL_src/*[c][u][d][a].[fF]90)

SET(CALYPSO_PARALLEL_SRC_FILES ${COMM_SRC_FILES} ${SPH_SHELL_SRC_FILES} ${SPH_SHELL_CUDA_COMPATIBLE_SRC_FILES})

# Define source files in SERIAL_src and its subdirectories
FILE(GLOB BASE_SRC_FILES SERIAL_src/BASE/*.[fF]90)
FILE(GLOB FFT_WRAPPER_SRC_FILES SERIAL_src/FFT_wrapper/*.[fF]90)
FILE(GLOB IO_SRC_FILES SERIAL_src/IO/*.[fF]90)
FILE(GLOB SPH_SPECTR_SRC_FILES SERIAL_src/SPH_SPECTR_src/*.[fF]90)
FILE(GLOB GAUSS_INTEGRATION_SRC_FILES SERIAL_src/gauss_integration/*.[fF]90)
FILE(GLOB SPHERICAL_HARMONICS_SRC_FILES SERIAL_src/spherical_harmonics/*.[fF]90)
SET(CALYPSO_CORE_SRC_FILES ${BASE_SRC_FILES} ${FFT_WRAPPER_SRC_FILES} ${IO_SRC_FILES} ${SPH_SPECTR_SRC_FILES} ${GAUSS_INTEGRATION_SRC_FILES} ${SPHERICAL_HARMONICS_SRC_FILES})

# Define source files in SOLVER_src and its subdirectories
FILE(GLOB DIRECT_SOLVER_SRC_FILES SOLVER_src/direct_solver/*.[fF]90)
SET(CALYPSO_SOLVER_SRC_FILES ${DIRECT_SOLVER_SRC_FILES})

# Define source files in UTILS_src and its subdirectories
FILE(GLOB MERGE_SRC_FILES UTILS_src/MERGE/*.[fF]90)
FILE(GLOB MESH_SRC_FILES UTILS_src/MESH/*.[fF]90)
FILE(GLOB SPHERICAL_GRID_SRC_FILES UTILS_src/spherical_grid/*.[fF]90)
SET(CALYPSO_UTILS_SRC_FILES ${MERGE_SRC_FILES} ${MESH_SRC_FILES} ${SPHERICAL_GRID_SRC_FILES})

IF (CUDA_FOUND)
  SET (CMAKE_C_FLAGS "-I${CUDA_TOOLKIT_ROOT_DIR}/include -L${CUDA_TOOLKIT_ROOT_DIR}/lib64 -DCUBLAS_USE_THUNKING -DCUBLAS_GFORTRAN -lcudart -lcublas")
  ADD_EXECUTABLE(cfortran ${CUDA_TOOLKIT_ROOT_DIR}/src/fortran_thunking.c)
  SET (CMAKE_Fortran_FLAGS ${CMAKE_Fortran_FLAGS} "-O3 -DCUBLAS cfortran -L${CUDA_TOOLKIT_ROOT_DIR}/lib64 -lcublas -lcudart")
  ADD_LIBRARY(calypso ${CALYPSO_CORE_SRC_FILES} ${CALYPSO_MHD_SRC_FILES} ${CALYPSO_PARALLEL_SRC_FILES} ${CALYPSO_SOLVER_SRC_FILES} ${CALYPSO_UTILS_SRC_FILES})
ELSE()
  ADD_LIBRARY(calypso ${CALYPSO_CORE_SRC_FILES} ${CALYPSO_MHD_SRC_FILES} ${CALYPSO_PARALLEL_SRC_FILES} ${CALYPSO_SOLVER_SRC_FILES} ${CALYPSO_UTILS_SRC_FILES})
ENDIF (CUDA_FOUND)

IF (FFTW_FOUND)
    TARGET_LINK_LIBRARIES(calypso ${FFTW_LIBRARIES})
ENDIF (FFTW_FOUND)

IF (HDF5_FOUND AND HDF5_IS_PARALLEL)
    TARGET_LINK_LIBRARIES(calypso ${HDF5_hdf5_fortran_LIBRARY} ${HDF5_hdf5_LIBRARY} -lz)
ENDIF(HDF5_FOUND AND HDF5_IS_PARALLEL)

IF(CUDA_FOUND)
      TARGET_LINK_LIBRARIES(calypso ${CUDA_LIBRARIES} ${CUDA_CUBLAS_LIBRARIES})
ENDIF(CUDA_FOUND)

TARGET_LINK_LIBRARIES(calypso ${MPI_Fortran_LIBRARIES})

